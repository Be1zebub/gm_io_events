name: Build

on:
  push:
    branches: [ master ]

jobs:
  build-linux:
    runs-on: ubuntu-18.04
    steps:
    - uses: actions/checkout@v2
    - uses: actions/checkout@v2
      with:
        submodules: recursive
        repository: danielga/garrysmod_common
        ref: x86-64-support-sourcesdk
        path: 'garrysmod_common'
    - name: Install Premake
      run: |
        wget https://github.com/premake/premake-core/releases/download/v5.0.0-alpha15/premake-5.0.0-alpha15-linux.tar.gz -O premake.tar.gz
        sudo tar -xvf premake.tar.gz --directory=/usr/bin
        sudo apt-get update
        sudo apt-get install g++-multilib
        gcc --version
    - name: Generate Project
      run: |
        premake5 --gmcommon=garrysmod_common gmake
    - name: Make
      run: |
        cd projects/linux/gmake
        make config=releasewithsymbols_x86_64 LDFLAGS="-lpthread"
    - uses: actions/upload-artifact@v2
      with:
        name: gmsv_io_events_linux.dll
        path: projects/linux/gmake/x86/ReleaseWithSymbols/gmsv_io_events_linux.dll
    - uses: actions/upload-artifact@v2
      with:
        name: gmsv_io_events_linux64.dll
        path: projects/linux/gmake/x86_64/ReleaseWithSymbols/gmsv_io_events_linux64.dll
  build-windows:
      env:
        msbuild: "C:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\Enterprise\\MSBuild\\Current\\Bin"
      runs-on: windows-latest
      steps:
      - uses: actions/checkout@v2
      - uses: actions/checkout@v2
        with:
          submodules: recursive
          repository: danielga/garrysmod_common
          path: 'garrysmod_common'
          ref: x86-64-support-sourcesdk
      - name: Install Premake
        run: |
           curl -L https://github.com/premake/premake-core/releases/download/v5.0.0-alpha15/premake-5.0.0-alpha15-windows.zip -o premake.zip
           tar -xf premake.zip
      - name: Generate Project
        run: |
          ./premake5.exe --gmcommon=garrysmod_common vs2019
      - name: Update Path
         run: |
           echo "${env:msbuild}" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append
      - name: Build
        run: |
          cd projects/windows/vs2019
          & msbuild /p:Configuration=ReleaseWithSymbols /p:Platform=Win32 eightbit.sln
      - uses: actions/upload-artifact@v2
        with:
          name: gmsv_io_events_windows.dll
          path: projects/windows/vs2019/x86/ReleaseWithSymbols/gmsv_io_events_win32.dll
      - name: Build 64
        run: |
          cd projects/windows/vs2019
          & "C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Current\Bin\msbuild.exe" /p:Configuration=ReleaseWithSymbols /p:Platform=x64 eightbit.sln
      - uses: actions/upload-artifact@v2
        with:
          name: gmsv_io_events_win64.dll
          path: projects/windows/vs2019/x86_64/ReleaseWithSymbols/gmsv_io_events_win64.dll
